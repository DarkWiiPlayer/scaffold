#!/usr/bin/env lua

local env = os.getenv("SCAFFOLD_DIR")
if env then
	for path in env:gmatch("[^;]+") do
		package.path = string.format("%s/?.lua;%s/?/init.lua;%s", path, path, package.path)
	end
end

local scaffold = require 'scaffold'
local I = scaffold.unindent

pcall(function()
	require("lumber.global") {
		format = require 'lumber.format.term';
		level = 5;
	}
end)

local name = ...

if not name then
	io.write(I[[
		|Lua Scaffold generator
		|
		|call as: scaffold <name> ...
		|where <name> is the name of a Lua module required as "scaffold.<name>"
		|
		|additional arguments can be passed to be handled by the scaffold module
		|
		|The special variable SCAFFOLD_DIR can be used to list several
		|directories separated by a ; that will be prepended to Lua's package.path
		|
		|	SCAFFOLD_DIR="$HOME/scaffold/lib" scaffold <test>
		|
		|For more information, please consult the readme.md
		|https://github.com/darkwiiplayer/scaffold
	|]])
	os.exit()
end

local template = require("scaffold."..name)

if type(template) == "function" then
	template = template(select(2, ...))
end

scaffold.builddir(template)
